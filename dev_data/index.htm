<!DOCTYPE html>
<html>
 <head>
  <meta http-equiv="Content-type" content="text/html; charset=utf-8">
  <!-- <script src="js/build.chart.js" charset="utf-8"></script> -->
  <link rel="stylesheet" type="text/css" href="css/build.css">
  <!-- <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="css/style.css"> -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Device Page</title>
  <script type="text/javascript">
   var xhttp=createXmlHttpObject();
   function createXmlHttpObject(){
    if(window.XMLHttpRequest){
     xhttp=new XMLHttpRequest();
    }else{
     xhttp=new ActiveXObject('Microsoft.XMLHTTP');
    }
    return xhttp;
   }

   window.onload = function() {
    deviceList('first');
   }

   function findDevice(submit) {
    document.getElementById('content').innerHTML='<div class="alert alert-dismissible alert-info"><div class="loader"><\/div><strong><center>Пожалуйста подождите, идет сканирование сети.<\/center><\/strong><\/div>';
    ajax(window.location.hostname,'devices.scan.json',submit, '1');
    setTimeout(function(){deviceList('search');}, 7000);
   }

   function deviceList(stage,sorting) {
    document.getElementById('content').innerHTML='';
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "/devices.list.json?"+Math.floor(Math.random()*10000), true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var ipModule=JSON.parse(xhttp.responseText);
     var allModules = [];
     for(var key in ipModule) {
      var ipval = ipModule[key].ip;
      if (ipval == '0.0.0.0') {location.href = "/setup.htm#wifi-connect";}
      if (stage == 'search') {
       loadBlock(ipval,'content','first',ipModule[key].module);
      }

      ipModule[key].module.push(ipModule[key].space);
      // Сортировка
      if (stage == 'first' && sorting == null || searchModule(ipModule[key].module,sorting) == 'yes') {
       loadBlock(ipval,'content','first',ipModule[key].module);
      }
      for (var s in ipModule[key].module) {if (ipModule[key].module[s] != 'ntp' && ipModule[key].module[s] != 'ddns' && ipModule[key].module[s] != 'timers' && ipModule[key].module[s] != 'mqtt') allModules.push(ipModule[key].module[s]);}
     }
     if (stage == 'first' || stage == 'search') {
      var moduleArray = [];
      var lookup  = {};
      for (var i in allModules) {lookup[allModules[i]] = allModules[i];}
      for (i in lookup) {moduleArray.push(lookup[i]);}
      // if (ipModule.length > 1) {toggle('sorting','hidden');}
      document.getElementById("sorting").innerHTML = '<h5 class="alert-default">{{LangSorting}}<\/h5><input type="button" class="btn btn-sm btn-default" value="all" onclick="deviceList(\'first\');">';
      for(var key in moduleArray) {
       document.getElementById("sorting").innerHTML += '<input type="button" class="btn btn-sm btn-default" onclick="deviceList(\'first\',\''+moduleArray[key]+'\')" value="'+moduleArray[key]+'">';

       //  if (moduleArray[key].module == 'temperature') {loadBlock(ipval,'content','first','block-tempereture');}

      }
     }
    }
   }

   function loadBlock(ipval, content, stage, modules) {
    if (searchModule(modules,"relay") == 'yes'){
     loadBlock2('relay','timer.save',ipval, content, stage);
    }
    if (searchModule(modules,"rgb") == 'yes'){
     loadBlock2('rgb','timer.save',ipval, content, stage);
    }
    if (searchModule(modules,"jalousie") == 'yes'){
     loadBlock2('jalousie','timer.save',ipval, content, stage);
    }
    if (searchModule(modules,"temperature") == 'yes'){
     loadBlock2('temperature','sensor',ipval, content, stage);
    }
    if (searchModule(modules,"analog") == 'yes'){
     loadBlock2('analog','analog',ipval, content, stage);
    }
   }

   function loadBlock2(page,jsonPage,ipval, content, stage){
    if (stage == 'first'){
     document.getElementById(content).innerHTML+='<div id="block-'+ipval+'-'+page+'"><div class="col-md-6"><div class="block"><div class="loader"><\/div> <center><a href="http://'+ipval+'">http://'+ipval+'<\/a><\/center><\/div><\/div><\/div>';
    }

    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipval+"/block-"+page+".htm", true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     var data = xhttp.responseText;

     xhttp.open("GET", "http://"+ipval+"/config.live.json?"+Math.floor(Math.random()*10000), true);
     xhttp.send(null);
     xhttp.onload = function(e) {
      var jsonResponse1 = JSON.parse(xhttp.responseText);

      xhttp.open("GET", "http://"+ipval+"/lang/lang."+jsonResponse1.lang+".json", true);
      xhttp.send(null);
      xhttp.onload = function(e) {
       var jsonResponse2=JSON.parse(xhttp.responseText);
       var jsonResponse = Object.assign(jsonResponse1, jsonResponse2);

       var xmlHttp=createXmlHttpObject();
       xmlHttp.open("GET", "http://"+ipval+"/"+jsonPage+".json", true);
       xmlHttp.send(null);
       xmlHttp.onload = function(e) {
        var timers=JSON.parse(xmlHttp.responseText);
        var timerList = '';

        if (timers.timer) {
         timers.timer.sort(function(a,b){return (a.time > b.time) ? 1 : ((b.time > a.time) ? -1 : 0);});
         for (var i = 0; i < timers.timer.length; i++) {
          if(timers.timer[i].module == page) {
           if (timers.timer[i].trigger == "on") {timers.timer[i].trigger = '<span class="label label-success">'+jsonResponse["LangOn."]+'<\/span>';}
           if (timers.timer[i].trigger == "off") {timers.timer[i].trigger = '<span class="label label-danger">'+jsonResponse["LangOff."]+'<\/span>';}
           if (timers.timer[i].trigger == "not") {timers.timer[i].trigger = '<span class="label label-info">'+jsonResponse["LangSwitch."]+'<\/span>';}
           timers.timer[i].day = jsonResponse["Lang"+timers.timer[i].day];
           timerList += '<li><b>'+timers.timer[i].trigger+' '+timers.timer[i].day.substring(0,7)+'.<\/b> '+timers.timer[i].time+'<\/li>';
          }
         }
         jsonResponse.timerList = (timerList?timerList:'<li>No timers<\/li>');
        }
        jsonResponse = Object.assign(jsonResponse, timers);

        var theCookies = document.cookie.split(';');
        for (var i = 1 ; i <= theCookies.length; i++) {
         jsonResponse[theCookies[i-1].split("=")[0].replace(/^ /,'')] = theCookies[i-1].split("=")[1];
        }

        jsonResponse.ip = ipval;
        jsonResponse.state = (jsonResponse.state=='0'?jsonResponse.LangOn:jsonResponse.LangOff);

        if (window.location.hostname == ipval) {
         var new_string2;
         var bodyData = document.getElementsByTagName('body')[0].innerHTML;
         for (var key in jsonResponse) {
          new_string2 = bodyData.replace(new RegExp('{{'+key+'}}', 'g'), jsonResponse[key]);
          bodyData = new_string2;
         }
         document.getElementsByTagName('body')[0].innerHTML = new_string2;

         var now_day = {
          year: new Date().getFullYear(),
          month: new Date().toLocaleDateString(jsonResponse.lang, {month: 'long'}),
          day: new Date().getDate(),
          weekday: new Date().toLocaleDateString(jsonResponse.lang, {weekday: 'long'})
         };
         document.getElementById('date').innerHTML=now_day.day+' '+now_day.weekday+'<small class="show">'+now_day.month+' '+now_day.year+'<\/small>';

        }

        var new_string;
        for (var key in jsonResponse) {
         new_string = data.replace(new RegExp('{{'+key+'}}', 'g'), jsonResponse[key]);
         data = new_string;
        }
        document.getElementById("block-"+ipval+"-"+page).innerHTML=new_string;

        //if (jsonPage == 'analog') {
        // loadChart('ct-analog','analog');
        //}

       }

      }
     }
    }
   }


   function ajax(ipHost, pagename, submit, loadB) {
    var old_submit = submit.value;
    var d = new Date(); // for now
    var datetext = d.getHours()+":"+d.getMinutes()+":"+d.getSeconds();
    var parent = submit.parentNode.childNodes[1].innerHTML;
    document.getElementById('history').insertAdjacentHTML('afterbegin', '<li><span class="label label-default">&#8987; '+datetext+'<\/span><span class="history" style="cursor:pointer" onclick="toggle(\'hide-'+datetext+'\');return false"><b>'+parent+'<\/b><br><em>'+old_submit+'<\/em><small class="hidden" id="hide-'+datetext+'"><hr>URL: <a href="http://'+ipHost+'/'+pagename+'">http://'+ipHost+'/'+pagename+'<\/a><\/small><\/span><\/li>');
    submit.value = 'Loading...';
    submit_disabled(true);
    var xhttp=createXmlHttpObject();
    xhttp.open("GET", "http://"+ipHost+"/"+pagename, true);
    xhttp.send(null);
    xhttp.onload = function(e) {
     submit.value=old_submit;
     submit_disabled(false);

     if (!loadB) {
      loadBlock2(pagename,'timer.save',ipHost, 'block-'+ipHost+'-'+pagename, '');
     }

     // ipval, content, stage, modules
     // loadBlock(ipval, content, stage, modules) {
     //alert(ipHost+'block-'+ipHost+'-'+pagename);
     //  if (!loadB) {
     // loadBlock2(ipHost,'block-'+ipHost+'-'+pagename, '','[\''+pagename+'\']');
     //  }
    }
   }

   function submit_disabled(request){
    var inputs = document.getElementsByTagName("input");
    for (var i = 0; i < inputs.length; i++) {
     if (inputs[i].type === 'submit') {inputs[i].disabled = request;}
    }
   }

   function toggle(target,status) {
    var curVal = document.getElementById(target).classList;
    if (curVal.contains('hidden')) {
     if (status != 'show') {
      curVal.remove('hidden');
      curVal.add('show');
     }
    } else {
     if (status != 'hidden') {
      curVal.remove('show');
      curVal.add('hidden');
     }
    }
   }

   function val(id,val){
    if (val) {
     document.getElementById(id).value=(val==' '?'':val);
    } else {
     var v = document.getElementById(id).value;
     return v;
    }
   }

   function setCookie(name, value, days, submit) {
    if (days) {
     var date = new Date();
     date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
     var expires = "; expires=" + date.toGMTString();
    }
    else expires = "";
    document.cookie = name + "=" + value + expires + "; path=/";
    submit.parentNode.classList.add('hidden');
   }

   function hide(name, submit) {
    // if (confirm(jsonResponse.LangHedden)) {
    submit.parentNode.classList.add('hidden');
    setCookie(name,'hidden',365,submit);
    // }
   }

   function searchModule(modules,find) {
    for(var key in modules) {
     if (modules[key] == find) {
      return "yes";
     }
    }
   }
  </script>
 </head>
 <body>
  <div class="container device">
   <div class="header">
    <div class="btn-group pull-right" style="margin-top:35px;">
     <a href="#" class="btn btn-default" onclick="deviceList('first');">Refresh</a>
     <a href="#" class="btn btn-default dropdown-toggle" onclick="toggle('help');">Help <span class="caret"></span></a>
     <ul class="dropdown-menu hidden" id="help"><li><a href="https://github.com/renat2985/rgb/issues" target="_blank">RGB</a></li><li><a href="https://github.com/tretyakovsa/Sonoff_WiFi_switch/issues" target="_blank">Sonoff</a></li><li><a href="https://github.com/tretyakovsa/jaluzi/issues" target="_blank">Jalousie</a></li></ul>
    </div>
    <div class="pull-right" style="margin-top:35px;margin-right:5px">
     <a href="/index2.htm" class="btn btn-warning">New design</a>
    </div>
    <h1 id="date"><br><small></small></h1>
   </div>
   <div class="col-sm-12 col-md-3">
    <h5 style="background-color:#C0C7CA;cursor:pointer" class="hidden-xs" onclick="toggle('history');return false">{{LangHistory}}</h5>
    <ul id="history" class="hidden-xs"></ul>
    <hr>
    <div class="block" id="sorting"></div>
    <div class="col-xs-6 col-sm-12">
     <div class="block">
      <h5 class="alert-danger">{{LangSearch1}}</h5>
      <div class="alert alert-dismissible alert-info {{g73683}}"><button class="close" onclick="hide('g73683',this);" type="button">×</button>{{LangSearch2}}</div>
      <input type="button" class="btn btn-block btn-default" value="{{LangSearch3}}" onclick="findDevice(this);window.scrollTo(0,0);">
     </div>
    </div>
    <div class="col-xs-6 col-md-12">
     <div class="block">
      <h5 class="alert-warning">{{LangScenery1}}</h5>
      <div class="alert alert-dismissible alert-info {{g94244}}"><button class="close" onclick="hide('g94244',this);" type="button">×</button>{{LangScenery2}}</div>
      <a class="btn btn-block btn-default" href="/scenery.htm">{{LangAddScenery}}</a>
     </div>
    </div>
    <div class="row"></div>
   </div>
   <div class="col-sm-12 col-md-9" id="content"></div>
  </div>
 </body>
</html>
